# This is a workflow to validate builds from PR on master

name: build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  # push:
  #   branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    steps:

      # Build auth_service
      - uses: actions/checkout@v2
      - name: test auth_service
        uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"
          # cache: "npm"
          # cache-dependency-path: '**/package-lock.json'
      - name: Run with npm
        working-directory: ./src/auth_service
        run: |
          npm install
          npm run test

      # Build api_gateway
      - uses: actions/checkout@v2
      - name: test api_gateway
        uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"
          # cache: "npm"
          # cache-dependency-path: '**/package-lock.json'
      - name: Run with npm
        working-directory: ./src/api_gateway
        run: |
          npm install
          npm run test

      # Build dashboard_service
      - uses: actions/checkout@v2
      - name: test dashboard_service
        uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"
          # cache: "npm"
          # cache-dependency-path: '**/package-lock.json'
      - name: Run with npm
        working-directory: ./src/dashboard_service
        run: |
          npm install
          npm run test

      # Build frontend
#       - uses: actions/checkout@v2
#       - name: Use Node.js LTS Gallium
#         uses: actions/setup-node@v2
#         with:
#           node-version: "lts/gallium"
#           # cache: 'npm'
#           # cache-dependency-path: '**/package-lock.json'
#       - name: Build Web-App module
#         working-directory: ./src/frontend
#         run: |
#           npm ci --legacy-peer-deps
#           CI="" npm run build --if-present
